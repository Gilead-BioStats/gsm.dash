---
title: "ShinyLive Experiment"
format: html
filters:
  - shinylive
---

::: {#dashboard-app}
```{shinylive-r}
#| standalone: true
library(shiny)
ui <- fluidPage(
  tags$script(HTML(
    "document.addEventListener('DOMContentLoaded', function () {
      window.addEventListener('message', function (event) {
        if (event.data.type === 'set-var') {
          Shiny.setInputValue('jsvar', event.data.jsvar);
          event.source.postMessage({ type: 'ack-var' }, event.origin);
        }
      });
      // Notify parent when Shiny is ready
      Shiny.initializedPromise.then(() => {
        window.parent.postMessage({ type: 'shiny-ready' }, '*');
      });
    });"
  )),
  verbatimTextOutput("var_display")
)
server <- function(input, output, session) {
  output$var_display <- renderText({
    paste("The variable from outside Shiny is:", input$jsvar)
  })
}
shinyApp(ui, server)
```
:::

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const observer = new MutationObserver((mutations, observerInstance) => {
      const iframe = document.querySelector('#dashboard-app iframe');
      if (iframe) {
        observerInstance.disconnect(); // Stop observing once iframe is found

        const jsvar = "valueSetViaJS";

        // Wait for Shiny-ready message
        window.addEventListener('message', function handleShinyReady(event) {
          if (
            event.data.type === 'shiny-ready' &&
            event.origin === window.location.origin &&
            event.source === iframe.contentWindow
          ) {
            iframe.contentWindow.postMessage({ type: 'set-var', jsvar }, '*');

            // Set up the listener for acknowledgment
            window.addEventListener('message', function handleAck(event) {
              if (
                event.data.type === 'ack-var' &&
                event.origin === window.location.origin &&
                event.source === iframe.contentWindow
              ) {
                window.removeEventListener('message', handleAck);
              }
            });

            window.removeEventListener('message', handleShinyReady);
          }
        });
      }
    });

    // Observe the DOM for changes in the div containing the iframe
    const target = document.querySelector('#dashboard-app');
    if (target) {
      observer.observe(target, { childList: true, subtree: true });
    } else {
      console.error('Target div for iframe not found.');
    }
  });
</script>
